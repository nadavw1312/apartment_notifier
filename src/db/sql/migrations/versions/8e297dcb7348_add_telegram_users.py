"""add telegram_users

Revision ID: 8e297dcb7348
Revises: 8c048bdcaa76
Create Date: 2025-04-07 21:46:57.983603

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8e297dcb7348'
down_revision: Union[str, None] = '8c048bdcaa76'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop tables in correct order to handle foreign key constraints
    op.drop_table('scraper_users_facebook_groups')
    op.drop_table('facebook_groups')
    op.drop_table('scraper_users')
    op.drop_table('telegram_users')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('scraper_users_facebook_groups',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('scraper_user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('facebook_group_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['facebook_group_id'], ['facebook_groups.group_id'], name='scraper_users_facebook_groups_facebook_group_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['scraper_user_id'], ['scraper_users.id'], name='scraper_users_facebook_groups_scraper_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='scraper_users_facebook_groups_pkey'),
    sa.UniqueConstraint('scraper_user_id', 'facebook_group_id', name='uix_user_group')
    )
    op.create_table('scraper_users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('source', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('session_data', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('last_login', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='scraper_users_pkey'),
    sa.UniqueConstraint('email', 'source', name='uix_email_source')
    )
    op.create_table('facebook_groups',
    sa.Column('group_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('group_id', name='facebook_groups_pkey')
    )
    op.create_table('telegram_users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('telegram_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('first_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='telegram_users_pkey')
    )
    # ### end Alembic commands ###
